{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Async thunks\nexport const fetchCategories = createAsyncThunk('categories/fetchCategories', async (params = {}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get('/api/categories', {\n      params\n    });\n    return response.data.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to fetch categories');\n  }\n});\nexport const fetchCategory = createAsyncThunk('categories/fetchCategory', async (categoryId, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(`/api/categories/${categoryId}`);\n    return response.data.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to fetch category');\n  }\n});\nconst initialState = {\n  categories: [],\n  currentCategory: null,\n  pagination: {\n    currentPage: 1,\n    totalPages: 1,\n    totalItems: 0,\n    itemsPerPage: 20,\n    hasNextPage: false,\n    hasPrevPage: false\n  },\n  loading: false,\n  error: null\n};\nconst categorySlice = createSlice({\n  name: 'categories',\n  initialState,\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    },\n    clearCurrentCategory: state => {\n      state.currentCategory = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Fetch categories\n    .addCase(fetchCategories.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchCategories.fulfilled, (state, action) => {\n      state.loading = false;\n      state.categories = action.payload.categories;\n      state.pagination = action.payload.pagination;\n      state.error = null;\n    }).addCase(fetchCategories.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Fetch single category\n    .addCase(fetchCategory.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchCategory.fulfilled, (state, action) => {\n      state.loading = false;\n      state.currentCategory = action.payload.category;\n      state.error = null;\n    }).addCase(fetchCategory.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  clearError,\n  clearCurrentCategory\n} = categorySlice.actions;\nexport default categorySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchCategories","params","rejectWithValue","response","get","data","error","_error$response","_error$response$data","message","fetchCategory","categoryId","_error$response2","_error$response2$data","initialState","categories","currentCategory","pagination","currentPage","totalPages","totalItems","itemsPerPage","hasNextPage","hasPrevPage","loading","categorySlice","name","reducers","clearError","state","clearCurrentCategory","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","category","actions","reducer"],"sources":["D:/blow pack/frountend/src/store/slices/categorySlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n// Async thunks\r\nexport const fetchCategories = createAsyncThunk(\r\n  'categories/fetchCategories',\r\n  async (params = {}, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get('/api/categories', { params });\r\n      return response.data.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message || 'Failed to fetch categories');\r\n    }\r\n  }\r\n);\r\n\r\nexport const fetchCategory = createAsyncThunk(\r\n  'categories/fetchCategory',\r\n  async (categoryId, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`/api/categories/${categoryId}`);\r\n      return response.data.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message || 'Failed to fetch category');\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  currentCategory: null,\r\n  pagination: {\r\n    currentPage: 1,\r\n    totalPages: 1,\r\n    totalItems: 0,\r\n    itemsPerPage: 20,\r\n    hasNextPage: false,\r\n    hasPrevPage: false,\r\n  },\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst categorySlice = createSlice({\r\n  name: 'categories',\r\n  initialState,\r\n  reducers: {\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n    clearCurrentCategory: (state) => {\r\n      state.currentCategory = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Fetch categories\r\n      .addCase(fetchCategories.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchCategories.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.categories = action.payload.categories;\r\n        state.pagination = action.payload.pagination;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchCategories.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      // Fetch single category\r\n      .addCase(fetchCategory.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchCategory.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.currentCategory = action.payload.category;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchCategory.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { clearError, clearCurrentCategory } = categorySlice.actions;\r\nexport default categorySlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}