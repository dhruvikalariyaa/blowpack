{"ast":null,"code":"import React from'react';// Error handling utility for API responses\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const handleApiError=function(error){var _response$headers;let response=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;let errorMessage='Something went wrong. Please try again.';let shouldRetry=false;let retryAfter=null;// Handle different types of errors\nif(response){var _response$data;const status=response.status;switch(status){case 400:errorMessage='Invalid request. Please check your input and try again.';break;case 401:errorMessage='Please login to continue.';// Redirect to login\nsetTimeout(()=>{window.location.href='/login';},2000);break;case 403:errorMessage='You do not have permission to perform this action.';break;case 404:errorMessage='The requested resource was not found.';break;case 409:errorMessage='This action conflicts with existing data. Please refresh and try again.';break;case 422:errorMessage='Please check your input and try again.';break;case 429:errorMessage='Too many requests. Please wait a moment before trying again.';shouldRetry=true;retryAfter=((_response$headers=response.headers)===null||_response$headers===void 0?void 0:_response$headers.get('Retry-After'))||60;// Add retry information to the error\nerror.retryAfter=retryAfter;error.isRateLimited=true;break;case 500:errorMessage='Server error. Please try again later.';shouldRetry=true;break;case 502:case 503:case 504:errorMessage='Service temporarily unavailable. Please try again later.';shouldRetry=true;break;default:errorMessage=\"Request failed with status \".concat(status,\". Please try again.\");shouldRetry=status>=500;}// Try to get error message from response body\nif((_response$data=response.data)!==null&&_response$data!==void 0&&_response$data.message){errorMessage=response.data.message;}}else if(error.message){// Network or other errors\nif(error.message.includes('Network Error')||error.message.includes('Failed to fetch')){errorMessage='Network error. Please check your internet connection and try again.';shouldRetry=true;}else if(error.message.includes('timeout')){errorMessage='Request timed out. Please try again.';shouldRetry=true;}else{errorMessage=error.message;}}return{message:errorMessage,shouldRetry,retryAfter,status:(response===null||response===void 0?void 0:response.status)||0};};// Retry utility with exponential backoff\nexport const retryRequest=async function(requestFn){let maxRetries=arguments.length>1&&arguments[1]!==undefined?arguments[1]:3;let baseDelay=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1000;let lastError;for(let attempt=0;attempt<=maxRetries;attempt++){try{return await requestFn();}catch(error){var _error$response;lastError=error;// Don't retry on 429 errors - respect rate limiting\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===429){throw error;}if(attempt===maxRetries){throw error;}// Calculate delay with exponential backoff\nconst delay=baseDelay*Math.pow(2,attempt);await new Promise(resolve=>setTimeout(resolve,delay));}}throw lastError;};// Error messages for different scenarios\nexport const ERROR_MESSAGES={NETWORK_ERROR:'Network error. Please check your internet connection.',TIMEOUT_ERROR:'Request timed out. Please try again.',RATE_LIMIT_ERROR:'Too many requests. Please wait a moment before trying again.',SERVER_ERROR:'Server error. Please try again later.',UNAUTHORIZED:'Please login to continue.',FORBIDDEN:'You do not have permission to perform this action.',NOT_FOUND:'The requested resource was not found.',VALIDATION_ERROR:'Please check your input and try again.',GENERIC_ERROR:'Something went wrong. Please try again.'};// Error boundary component for React\nexport class ErrorBoundary extends React.Component{constructor(props){super(props);this.state={hasError:false,error:null};}static getDerivedStateFromError(error){return{hasError:true,error};}componentDidCatch(error,errorInfo){console.error('Error caught by boundary:',error,errorInfo);}render(){if(this.state.hasError){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen flex items-center justify-center bg-gray-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mx-auto h-12 w-12 text-red-500 mb-4\",children:/*#__PURE__*/_jsx(\"svg\",{fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"})})}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 mb-2\",children:\"Something went wrong\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-4\",children:\"We're sorry, but something unexpected happened.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.location.reload(),className:\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\",children:\"Reload Page\"})]})});}return this.props.children;}}","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","handleApiError","error","_response$headers","response","arguments","length","undefined","errorMessage","shouldRetry","retryAfter","_response$data","status","setTimeout","window","location","href","headers","get","isRateLimited","concat","data","message","includes","retryRequest","requestFn","maxRetries","baseDelay","lastError","attempt","_error$response","delay","Math","pow","Promise","resolve","ERROR_MESSAGES","NETWORK_ERROR","TIMEOUT_ERROR","RATE_LIMIT_ERROR","SERVER_ERROR","UNAUTHORIZED","FORBIDDEN","NOT_FOUND","VALIDATION_ERROR","GENERIC_ERROR","ErrorBoundary","Component","constructor","props","state","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","console","render","className","children","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","reload"],"sources":["E:/blowpack/frountend/src/utils/errorHandler.js"],"sourcesContent":["import React from 'react';\n\n// Error handling utility for API responses\nexport const handleApiError = (error, response = null) => {\n  let errorMessage = 'Something went wrong. Please try again.';\n  let shouldRetry = false;\n  let retryAfter = null;\n\n  // Handle different types of errors\n  if (response) {\n    const status = response.status;\n    \n    switch (status) {\n      case 400:\n        errorMessage = 'Invalid request. Please check your input and try again.';\n        break;\n      case 401:\n        errorMessage = 'Please login to continue.';\n        // Redirect to login\n        setTimeout(() => {\n          window.location.href = '/login';\n        }, 2000);\n        break;\n      case 403:\n        errorMessage = 'You do not have permission to perform this action.';\n        break;\n      case 404:\n        errorMessage = 'The requested resource was not found.';\n        break;\n      case 409:\n        errorMessage = 'This action conflicts with existing data. Please refresh and try again.';\n        break;\n      case 422:\n        errorMessage = 'Please check your input and try again.';\n        break;\n      case 429:\n        errorMessage = 'Too many requests. Please wait a moment before trying again.';\n        shouldRetry = true;\n        retryAfter = response.headers?.get('Retry-After') || 60;\n        // Add retry information to the error\n        error.retryAfter = retryAfter;\n        error.isRateLimited = true;\n        break;\n      case 500:\n        errorMessage = 'Server error. Please try again later.';\n        shouldRetry = true;\n        break;\n      case 502:\n      case 503:\n      case 504:\n        errorMessage = 'Service temporarily unavailable. Please try again later.';\n        shouldRetry = true;\n        break;\n      default:\n        errorMessage = `Request failed with status ${status}. Please try again.`;\n        shouldRetry = status >= 500;\n    }\n\n    // Try to get error message from response body\n    if (response.data?.message) {\n      errorMessage = response.data.message;\n    }\n  } else if (error.message) {\n    // Network or other errors\n    if (error.message.includes('Network Error') || error.message.includes('Failed to fetch')) {\n      errorMessage = 'Network error. Please check your internet connection and try again.';\n      shouldRetry = true;\n    } else if (error.message.includes('timeout')) {\n      errorMessage = 'Request timed out. Please try again.';\n      shouldRetry = true;\n    } else {\n      errorMessage = error.message;\n    }\n  }\n\n  return {\n    message: errorMessage,\n    shouldRetry,\n    retryAfter,\n    status: response?.status || 0\n  };\n};\n\n// Retry utility with exponential backoff\nexport const retryRequest = async (requestFn, maxRetries = 3, baseDelay = 1000) => {\n  let lastError;\n  \n  for (let attempt = 0; attempt <= maxRetries; attempt++) {\n    try {\n      return await requestFn();\n    } catch (error) {\n      lastError = error;\n      \n      // Don't retry on 429 errors - respect rate limiting\n      if (error.response?.status === 429) {\n        throw error;\n      }\n      \n      if (attempt === maxRetries) {\n        throw error;\n      }\n      \n      // Calculate delay with exponential backoff\n      const delay = baseDelay * Math.pow(2, attempt);\n      await new Promise(resolve => setTimeout(resolve, delay));\n    }\n  }\n  \n  throw lastError;\n};\n\n// Error messages for different scenarios\nexport const ERROR_MESSAGES = {\n  NETWORK_ERROR: 'Network error. Please check your internet connection.',\n  TIMEOUT_ERROR: 'Request timed out. Please try again.',\n  RATE_LIMIT_ERROR: 'Too many requests. Please wait a moment before trying again.',\n  SERVER_ERROR: 'Server error. Please try again later.',\n  UNAUTHORIZED: 'Please login to continue.',\n  FORBIDDEN: 'You do not have permission to perform this action.',\n  NOT_FOUND: 'The requested resource was not found.',\n  VALIDATION_ERROR: 'Please check your input and try again.',\n  GENERIC_ERROR: 'Something went wrong. Please try again.'\n};\n\n// Error boundary component for React\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('Error caught by boundary:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n          <div className=\"text-center\">\n            <div className=\"mx-auto h-12 w-12 text-red-500 mb-4\">\n              <svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n              </svg>\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Something went wrong</h2>\n            <p className=\"text-gray-600 mb-4\">We're sorry, but something unexpected happened.</p>\n            <button\n              onClick={() => window.location.reload()}\n              className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\n            >\n              Reload Page\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}