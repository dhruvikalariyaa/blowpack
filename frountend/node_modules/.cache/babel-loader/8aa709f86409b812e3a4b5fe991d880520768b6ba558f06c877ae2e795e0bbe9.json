{"ast":null,"code":"import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import axios from'axios';import{handleApiError,retryRequest}from'../../utils/errorHandler';// Async thunks\nexport const fetchCategories=createAsyncThunk('categories/fetchCategories',async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let{rejectWithValue,getState}=arguments.length>1?arguments[1]:undefined;try{// Check if we already have categories and this is not a forced refresh\nconst state=getState();if(state.categories.categories.length>0&&!params.forceRefresh){return{categories:state.categories.categories,pagination:state.categories.pagination};}const requestFn=async()=>{const response=await axios.get('/api/categories',{params});return response.data.data;};// Use retry logic for rate limiting\nconst data=await retryRequest(requestFn,3,1000);return data;}catch(error){var _error$response;const errorInfo=handleApiError(error,error.response);// If it's a 429 error, include retry information\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===429){return rejectWithValue({message:errorInfo.message,isRateLimited:true,retryAfter:errorInfo.retryAfter,status:429});}return rejectWithValue(errorInfo.message||'Failed to fetch categories');}});export const fetchCategory=createAsyncThunk('categories/fetchCategory',async(categoryId,_ref)=>{let{rejectWithValue}=_ref;try{const requestFn=async()=>{const response=await axios.get(\"/api/categories/\".concat(categoryId));return response.data.data;};// Use retry logic for rate limiting\nconst data=await retryRequest(requestFn,3,1000);return data;}catch(error){const errorInfo=handleApiError(error,error.response);return rejectWithValue(errorInfo.message||'Failed to fetch category');}});const initialState={categories:[],currentCategory:null,pagination:{currentPage:1,totalPages:1,totalItems:0,itemsPerPage:20,hasNextPage:false,hasPrevPage:false},loading:false,error:null,isRateLimited:false,retryAfter:null,lastFetched:null};const categorySlice=createSlice({name:'categories',initialState,reducers:{clearError:state=>{state.error=null;},clearCurrentCategory:state=>{state.currentCategory=null;},setRateLimited:(state,action)=>{state.isRateLimited=action.payload.isRateLimited;state.retryAfter=action.payload.retryAfter;},clearRateLimit:state=>{state.isRateLimited=false;state.retryAfter=null;}},extraReducers:builder=>{builder// Fetch categories\n.addCase(fetchCategories.pending,state=>{state.loading=true;state.error=null;}).addCase(fetchCategories.fulfilled,(state,action)=>{state.loading=false;state.categories=action.payload.categories;state.pagination=action.payload.pagination;state.error=null;state.isRateLimited=false;state.retryAfter=null;state.lastFetched=Date.now();}).addCase(fetchCategories.rejected,(state,action)=>{state.loading=false;// Handle rate limit error with retry information\nif(action.payload&&typeof action.payload==='object'&&action.payload.isRateLimited){state.error=action.payload.message;state.isRateLimited=true;state.retryAfter=action.payload.retryAfter||60;}else{state.error=action.payload;state.isRateLimited=false;state.retryAfter=null;}})// Fetch single category\n.addCase(fetchCategory.pending,state=>{state.loading=true;state.error=null;}).addCase(fetchCategory.fulfilled,(state,action)=>{state.loading=false;state.currentCategory=action.payload.category;state.error=null;}).addCase(fetchCategory.rejected,(state,action)=>{state.loading=false;state.error=action.payload;});}});export const{clearError,clearCurrentCategory,setRateLimited,clearRateLimit}=categorySlice.actions;export default categorySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","handleApiError","retryRequest","fetchCategories","params","arguments","length","undefined","rejectWithValue","getState","state","categories","forceRefresh","pagination","requestFn","response","get","data","error","_error$response","errorInfo","status","message","isRateLimited","retryAfter","fetchCategory","categoryId","_ref","concat","initialState","currentCategory","currentPage","totalPages","totalItems","itemsPerPage","hasNextPage","hasPrevPage","loading","lastFetched","categorySlice","name","reducers","clearError","clearCurrentCategory","setRateLimited","action","payload","clearRateLimit","extraReducers","builder","addCase","pending","fulfilled","Date","now","rejected","category","actions","reducer"],"sources":["E:/blowpack/frountend/src/store/slices/categorySlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { handleApiError, retryRequest } from '../../utils/errorHandler';\n\n// Async thunks\nexport const fetchCategories = createAsyncThunk(\n  'categories/fetchCategories',\n  async (params = {}, { rejectWithValue, getState }) => {\n    try {\n      // Check if we already have categories and this is not a forced refresh\n      const state = getState();\n      if (state.categories.categories.length > 0 && !params.forceRefresh) {\n        return {\n          categories: state.categories.categories,\n          pagination: state.categories.pagination\n        };\n      }\n\n      const requestFn = async () => {\n        const response = await axios.get('/api/categories', { params });\n        return response.data.data;\n      };\n\n      // Use retry logic for rate limiting\n      const data = await retryRequest(requestFn, 3, 1000);\n      return data;\n    } catch (error) {\n      const errorInfo = handleApiError(error, error.response);\n      \n      // If it's a 429 error, include retry information\n      if (error.response?.status === 429) {\n        return rejectWithValue({\n          message: errorInfo.message,\n          isRateLimited: true,\n          retryAfter: errorInfo.retryAfter,\n          status: 429\n        });\n      }\n      \n      return rejectWithValue(errorInfo.message || 'Failed to fetch categories');\n    }\n  }\n);\n\nexport const fetchCategory = createAsyncThunk(\n  'categories/fetchCategory',\n  async (categoryId, { rejectWithValue }) => {\n    try {\n      const requestFn = async () => {\n        const response = await axios.get(`/api/categories/${categoryId}`);\n        return response.data.data;\n      };\n\n      // Use retry logic for rate limiting\n      const data = await retryRequest(requestFn, 3, 1000);\n      return data;\n    } catch (error) {\n      const errorInfo = handleApiError(error, error.response);\n      return rejectWithValue(errorInfo.message || 'Failed to fetch category');\n    }\n  }\n);\n\nconst initialState = {\n  categories: [],\n  currentCategory: null,\n  pagination: {\n    currentPage: 1,\n    totalPages: 1,\n    totalItems: 0,\n    itemsPerPage: 20,\n    hasNextPage: false,\n    hasPrevPage: false,\n  },\n  loading: false,\n  error: null,\n  isRateLimited: false,\n  retryAfter: null,\n  lastFetched: null,\n};\n\nconst categorySlice = createSlice({\n  name: 'categories',\n  initialState,\n  reducers: {\n    clearError: (state) => {\n      state.error = null;\n    },\n    clearCurrentCategory: (state) => {\n      state.currentCategory = null;\n    },\n    setRateLimited: (state, action) => {\n      state.isRateLimited = action.payload.isRateLimited;\n      state.retryAfter = action.payload.retryAfter;\n    },\n    clearRateLimit: (state) => {\n      state.isRateLimited = false;\n      state.retryAfter = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Fetch categories\n      .addCase(fetchCategories.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchCategories.fulfilled, (state, action) => {\n        state.loading = false;\n        state.categories = action.payload.categories;\n        state.pagination = action.payload.pagination;\n        state.error = null;\n        state.isRateLimited = false;\n        state.retryAfter = null;\n        state.lastFetched = Date.now();\n      })\n      .addCase(fetchCategories.rejected, (state, action) => {\n        state.loading = false;\n        \n        // Handle rate limit error with retry information\n        if (action.payload && typeof action.payload === 'object' && action.payload.isRateLimited) {\n          state.error = action.payload.message;\n          state.isRateLimited = true;\n          state.retryAfter = action.payload.retryAfter || 60;\n        } else {\n          state.error = action.payload;\n          state.isRateLimited = false;\n          state.retryAfter = null;\n        }\n      })\n      // Fetch single category\n      .addCase(fetchCategory.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchCategory.fulfilled, (state, action) => {\n        state.loading = false;\n        state.currentCategory = action.payload.category;\n        state.error = null;\n      })\n      .addCase(fetchCategory.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const { clearError, clearCurrentCategory, setRateLimited, clearRateLimit } = categorySlice.actions;\nexport default categorySlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}