{"ast":null,"code":"\"use strict\";\n\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExternalAccountClient = void 0;\nconst baseexternalclient_1 = require(\"./baseexternalclient\");\nconst identitypoolclient_1 = require(\"./identitypoolclient\");\nconst awsclient_1 = require(\"./awsclient\");\nconst pluggable_auth_client_1 = require(\"./pluggable-auth-client\");\n/**\n * Dummy class with no constructor. Developers are expected to use fromJSON.\n */\nclass ExternalAccountClient {\n  constructor() {\n    throw new Error('ExternalAccountClients should be initialized via: ' + 'ExternalAccountClient.fromJSON(), ' + 'directly via explicit constructors, eg. ' + 'new AwsClient(options), new IdentityPoolClient(options), new' + 'PluggableAuthClientOptions, or via ' + 'new GoogleAuth(options).getClient()');\n  }\n  /**\n   * This static method will instantiate the\n   * corresponding type of external account credential depending on the\n   * underlying credential source.\n   * @param options The external account options object typically loaded\n   *   from the external account JSON credential file.\n   * @return A BaseExternalAccountClient instance or null if the options\n   *   provided do not correspond to an external account credential.\n   */\n  static fromJSON(options) {\n    if (options && options.type === baseexternalclient_1.EXTERNAL_ACCOUNT_TYPE) {\n      if (options.credential_source?.environment_id) {\n        return new awsclient_1.AwsClient(options);\n      } else if (options.credential_source?.executable) {\n        return new pluggable_auth_client_1.PluggableAuthClient(options);\n      } else {\n        return new identitypoolclient_1.IdentityPoolClient(options);\n      }\n    } else {\n      return null;\n    }\n  }\n}\nexports.ExternalAccountClient = ExternalAccountClient;","map":{"version":3,"names":["Object","defineProperty","exports","value","ExternalAccountClient","baseexternalclient_1","require","identitypoolclient_1","awsclient_1","pluggable_auth_client_1","constructor","Error","fromJSON","options","type","EXTERNAL_ACCOUNT_TYPE","credential_source","environment_id","AwsClient","executable","PluggableAuthClient","IdentityPoolClient"],"sources":["E:/blowpack/frountend/node_modules/google-auth-library/build/src/auth/externalclient.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExternalAccountClient = void 0;\nconst baseexternalclient_1 = require(\"./baseexternalclient\");\nconst identitypoolclient_1 = require(\"./identitypoolclient\");\nconst awsclient_1 = require(\"./awsclient\");\nconst pluggable_auth_client_1 = require(\"./pluggable-auth-client\");\n/**\n * Dummy class with no constructor. Developers are expected to use fromJSON.\n */\nclass ExternalAccountClient {\n    constructor() {\n        throw new Error('ExternalAccountClients should be initialized via: ' +\n            'ExternalAccountClient.fromJSON(), ' +\n            'directly via explicit constructors, eg. ' +\n            'new AwsClient(options), new IdentityPoolClient(options), new' +\n            'PluggableAuthClientOptions, or via ' +\n            'new GoogleAuth(options).getClient()');\n    }\n    /**\n     * This static method will instantiate the\n     * corresponding type of external account credential depending on the\n     * underlying credential source.\n     * @param options The external account options object typically loaded\n     *   from the external account JSON credential file.\n     * @return A BaseExternalAccountClient instance or null if the options\n     *   provided do not correspond to an external account credential.\n     */\n    static fromJSON(options) {\n        if (options && options.type === baseexternalclient_1.EXTERNAL_ACCOUNT_TYPE) {\n            if (options.credential_source?.environment_id) {\n                return new awsclient_1.AwsClient(options);\n            }\n            else if (options.credential_source?.executable) {\n                return new pluggable_auth_client_1.PluggableAuthClient(options);\n            }\n            else {\n                return new identitypoolclient_1.IdentityPoolClient(options);\n            }\n        }\n        else {\n            return null;\n        }\n    }\n}\nexports.ExternalAccountClient = ExternalAccountClient;\n//# sourceMappingURL=externalclient.js.map"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,qBAAqB,GAAG,KAAK,CAAC;AACtC,MAAMC,oBAAoB,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAC5D,MAAMC,oBAAoB,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AAC5D,MAAME,WAAW,GAAGF,OAAO,CAAC,aAAa,CAAC;AAC1C,MAAMG,uBAAuB,GAAGH,OAAO,CAAC,yBAAyB,CAAC;AAClE;AACA;AACA;AACA,MAAMF,qBAAqB,CAAC;EACxBM,WAAWA,CAAA,EAAG;IACV,MAAM,IAAIC,KAAK,CAAC,oDAAoD,GAChE,oCAAoC,GACpC,0CAA0C,GAC1C,8DAA8D,GAC9D,qCAAqC,GACrC,qCAAqC,CAAC;EAC9C;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAOC,QAAQA,CAACC,OAAO,EAAE;IACrB,IAAIA,OAAO,IAAIA,OAAO,CAACC,IAAI,KAAKT,oBAAoB,CAACU,qBAAqB,EAAE;MACxE,IAAIF,OAAO,CAACG,iBAAiB,EAAEC,cAAc,EAAE;QAC3C,OAAO,IAAIT,WAAW,CAACU,SAAS,CAACL,OAAO,CAAC;MAC7C,CAAC,MACI,IAAIA,OAAO,CAACG,iBAAiB,EAAEG,UAAU,EAAE;QAC5C,OAAO,IAAIV,uBAAuB,CAACW,mBAAmB,CAACP,OAAO,CAAC;MACnE,CAAC,MACI;QACD,OAAO,IAAIN,oBAAoB,CAACc,kBAAkB,CAACR,OAAO,CAAC;MAC/D;IACJ,CAAC,MACI;MACD,OAAO,IAAI;IACf;EACJ;AACJ;AACAX,OAAO,CAACE,qBAAqB,GAAGA,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}