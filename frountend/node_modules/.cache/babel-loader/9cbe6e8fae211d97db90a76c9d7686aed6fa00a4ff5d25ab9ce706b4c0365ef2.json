{"ast":null,"code":"// Google OAuth configuration\nconst GOOGLE_CLIENT_ID=process.env.REACT_APP_GOOGLE_CLIENT_ID;// Function to initialize Google Sign-In\nexport const initializeGoogleSignIn=()=>{return new Promise((resolve,reject)=>{if(window.google&&window.google.accounts.id){window.google.accounts.id.initialize({client_id:GOOGLE_CLIENT_ID,callback:handleCredentialResponse,auto_select:false,cancel_on_tap_outside:true});resolve();}else{reject(new Error('Google Sign-In library not loaded'));}});};// Function to render Google Sign-In button\nexport const renderGoogleSignInButton=(elementId,onSuccess,onError)=>{if(window.google&&window.google.accounts.id){window.google.accounts.id.renderButton(document.getElementById(elementId),{theme:'outline',size:'large',width:'100%',text:'continue_with',shape:'rectangular',logo_alignment:'left'});// Store callbacks globally for the credential response handler\nwindow.googleAuthCallbacks={onSuccess,onError};}};// Handle Google credential response\nconst handleCredentialResponse=async response=>{try{const{onSuccess,onError}=window.googleAuthCallbacks||{};if(!response.credential){throw new Error('No credential received from Google');}// Decode the JWT token to get user info\nconst payload=JSON.parse(atob(response.credential.split('.')[1]));const userData={googleId:payload.sub,name:payload.name,email:payload.email,picture:payload.picture,emailVerified:payload.email_verified};if(onSuccess){onSuccess(userData,response.credential);}}catch(error){console.error('Error handling Google credential response:',error);const{onError}=window.googleAuthCallbacks||{};if(onError){onError(error);}}};// Function to load Google Sign-In script\nexport const loadGoogleSignInScript=()=>{return new Promise((resolve,reject)=>{if(window.google&&window.google.accounts.id){resolve();return;}const script=document.createElement('script');script.src='https://accounts.google.com/gsi/client';script.async=true;script.defer=true;script.onload=()=>{resolve();};script.onerror=()=>{reject(new Error('Failed to load Google Sign-In script'));};document.head.appendChild(script);});};// Function to sign out from Google\nexport const signOutFromGoogle=()=>{if(window.google&&window.google.accounts.id){window.google.accounts.id.disableAutoSelect();}};// Function to get Google user info from credential\nexport const getGoogleUserInfo=credential=>{try{const payload=JSON.parse(atob(credential.split('.')[1]));return{googleId:payload.sub,name:payload.name,email:payload.email,picture:payload.picture,emailVerified:payload.email_verified};}catch(error){console.error('Error parsing Google credential:',error);throw error;}};","map":{"version":3,"names":["GOOGLE_CLIENT_ID","process","env","REACT_APP_GOOGLE_CLIENT_ID","initializeGoogleSignIn","Promise","resolve","reject","window","google","accounts","id","initialize","client_id","callback","handleCredentialResponse","auto_select","cancel_on_tap_outside","Error","renderGoogleSignInButton","elementId","onSuccess","onError","renderButton","document","getElementById","theme","size","width","text","shape","logo_alignment","googleAuthCallbacks","response","credential","payload","JSON","parse","atob","split","userData","googleId","sub","name","email","picture","emailVerified","email_verified","error","console","loadGoogleSignInScript","script","createElement","src","async","defer","onload","onerror","head","appendChild","signOutFromGoogle","disableAutoSelect","getGoogleUserInfo"],"sources":["E:/blowpack/frountend/src/utils/googleAuth.js"],"sourcesContent":["// Google OAuth configuration\r\nconst GOOGLE_CLIENT_ID = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\n\r\n// Function to initialize Google Sign-In\r\nexport const initializeGoogleSignIn = () => {\r\n  return new Promise((resolve, reject) => {\r\n    if (window.google && window.google.accounts.id) {\r\n      window.google.accounts.id.initialize({\r\n        client_id: GOOGLE_CLIENT_ID,\r\n        callback: handleCredentialResponse,\r\n        auto_select: false,\r\n        cancel_on_tap_outside: true,\r\n      });\r\n      resolve();\r\n    } else {\r\n      reject(new Error('Google Sign-In library not loaded'));\r\n    }\r\n  });\r\n};\r\n\r\n// Function to render Google Sign-In button\r\nexport const renderGoogleSignInButton = (elementId, onSuccess, onError) => {\r\n  if (window.google && window.google.accounts.id) {\r\n    window.google.accounts.id.renderButton(\r\n      document.getElementById(elementId),\r\n      {\r\n        theme: 'outline',\r\n        size: 'large',\r\n        width: '100%',\r\n        text: 'continue_with',\r\n        shape: 'rectangular',\r\n        logo_alignment: 'left',\r\n      }\r\n    );\r\n    \r\n    // Store callbacks globally for the credential response handler\r\n    window.googleAuthCallbacks = { onSuccess, onError };\r\n  }\r\n};\r\n\r\n// Handle Google credential response\r\nconst handleCredentialResponse = async (response) => {\r\n  try {\r\n    const { onSuccess, onError } = window.googleAuthCallbacks || {};\r\n    \r\n    if (!response.credential) {\r\n      throw new Error('No credential received from Google');\r\n    }\r\n\r\n    // Decode the JWT token to get user info\r\n    const payload = JSON.parse(atob(response.credential.split('.')[1]));\r\n    \r\n    const userData = {\r\n      googleId: payload.sub,\r\n      name: payload.name,\r\n      email: payload.email,\r\n      picture: payload.picture,\r\n      emailVerified: payload.email_verified,\r\n    };\r\n\r\n    if (onSuccess) {\r\n      onSuccess(userData, response.credential);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error handling Google credential response:', error);\r\n    const { onError } = window.googleAuthCallbacks || {};\r\n    if (onError) {\r\n      onError(error);\r\n    }\r\n  }\r\n};\r\n\r\n// Function to load Google Sign-In script\r\nexport const loadGoogleSignInScript = () => {\r\n  return new Promise((resolve, reject) => {\r\n    if (window.google && window.google.accounts.id) {\r\n      resolve();\r\n      return;\r\n    }\r\n\r\n    const script = document.createElement('script');\r\n    script.src = 'https://accounts.google.com/gsi/client';\r\n    script.async = true;\r\n    script.defer = true;\r\n    script.onload = () => {\r\n      resolve();\r\n    };\r\n    script.onerror = () => {\r\n      reject(new Error('Failed to load Google Sign-In script'));\r\n    };\r\n    document.head.appendChild(script);\r\n  });\r\n};\r\n\r\n// Function to sign out from Google\r\nexport const signOutFromGoogle = () => {\r\n  if (window.google && window.google.accounts.id) {\r\n    window.google.accounts.id.disableAutoSelect();\r\n  }\r\n};\r\n\r\n// Function to get Google user info from credential\r\nexport const getGoogleUserInfo = (credential) => {\r\n  try {\r\n    const payload = JSON.parse(atob(credential.split('.')[1]));\r\n    return {\r\n      googleId: payload.sub,\r\n      name: payload.name,\r\n      email: payload.email,\r\n      picture: payload.picture,\r\n      emailVerified: payload.email_verified,\r\n    };\r\n  } catch (error) {\r\n    console.error('Error parsing Google credential:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}